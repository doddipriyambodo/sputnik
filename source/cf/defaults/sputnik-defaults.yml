AWSTemplateFormatVersion: '2010-09-09'
Description: 'sputnik - Defaults - Version %%VERSION%%'
Parameters:
    sourceS3Bucket:
        Type: String
        Description: sputnik S3 bucket.
    sourceS3KeyPrefix:
        Type: String
        Description: sputnik Source key prefix.
    deviceBlueprintsTable:
        Type: String
        Description: DynamoDB Table for storing the device blueprints
    deviceTypesTable:
        Type: String
        Description: DynamoDB Table for storing the device types
    customResourceUtilsHelperArn:
        Type: String
        Description: Utils custom resource helper ARN
    deploymentUUID:
        Type: String
        Description: UUID of the deployment

Resources:

    # Blueprints

    DefaultsDeviceTypes:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceS3KeyPrefix, 'cf', 'defaults', 'device-types']]
            table: !Ref deviceTypesTable
            customAction: 'dynamodbPutObjectsFromS3Folder'
            uuid: !Ref deploymentUUID

    DefaultsDeviceBlueprints:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceS3KeyPrefix, 'cf', 'defaults', 'device-blueprints']]
            table: !Ref deviceBlueprintsTable
            customAction: 'dynamodbPutObjectsFromS3Folder'
            uuid: !Ref deploymentUUID

    # Lambda functions

    DefaultsGreengrassLambdaRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: 'Allow'
                      Principal:
                          Service:
                              - 'lambda.amazonaws.com'
                      Action:
                          - 'sts:AssumeRole'
            Path: '/'

    DefaultsRaspberryPiSenseHatDemoLambda:
        Type: 'AWS::Lambda::Function'
        Properties:
            FunctionName: 'sputnik-rpi-sense-hat-demo-python'
            Description: 'sputnik Raspberry Pi Sense Hat Demo Lambda Code'
            Code:
                S3Bucket: !Ref sourceS3Bucket
                S3Key: !Join ['/', [!Ref sourceS3KeyPrefix, 'greengrasslambda', 'sputnik-rpi-sense-hat-demo-python.zip']]
            Handler: lambda_function.lambda_handler
            Runtime: python2.7
            Role: !GetAtt DefaultsGreengrassLambdaRole.Arn
            Timeout: 3
            MemorySize: 128
    DefaultsRaspberryPiSenseHatDemoLambdaVersion:
        Type: 'AWS::Lambda::Version'
        Properties:
            FunctionName: !Ref DefaultsRaspberryPiSenseHatDemoLambda
            Description: 'A first version of sputnik-rpi-sense-hat-demo-python'
    DefaultsRaspberryPiSenseHatDemoLambdaAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: !Ref DefaultsRaspberryPiSenseHatDemoLambda
            FunctionVersion: !GetAtt DefaultsRaspberryPiSenseHatDemoLambdaVersion.Version
            Name: 'Prod'

