AWSTemplateFormatVersion: '2010-09-09'
Description: 'sputnik - Micro Service Lambda - Admin - Version %%VERSION%%'
Parameters:
    sourceBucket:
        Type: String
        Description: S3 Bucket for Lambda code.
    lambdaSourceKeyPrefix:
        Type: String
        Description: S3 Bucket Key prefix for Lambda code.
    userPoolId:
        Type: String
        Description: Cognito User Pool Id

Resources:

    lambdaServiceAdminRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Principal:
                            Service:
                                - 'lambda.amazonaws.com'
                        Action:
                                - 'sts:AssumeRole'
            Path: '/'

    lambdaServiceAdminPolicy:
        Type: 'AWS::IAM::ManagedPolicy'
        Properties:
            Description: 'sputnik policy for the Admin microservice Lambda function.'
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Action:
                            - 'logs:CreateLogGroup'
                            - 'logs:CreateLogStream'
                            - 'logs:PutLogEvents'
                        Resource: !Join ['', ['arn:aws:logs:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':log-group:/aws/lambda/', !Ref lambdaServiceAdmin, ':*']]
                    -
                        Effect: 'Allow'
                        Action:
                            # TODO: Too permissive for now.
                            - 'cognito-idp:*'
                            # - 'cognito-idp:ListUsers'
                            # - 'cognito-idp:AdminEnableUser'
                            # - 'cognito-idp:AdminDisableUser'
                            # - 'cognito-idp:AdminDeleteUser'
                            # - 'cognito-idp:AdminAddUserToGroup'
                        Resource:
                            - '*'
                    -
                        Effect: 'Allow'
                        Action:
                            # TODO: Too permissive for now.
                            - 'iot:*'
                            - 'greengrass:*'
                        Resource:
                            - '*'
            Roles:
                - !Ref 'lambdaServiceAdminRole'

    lambdaServiceAdmin:
        Type: 'AWS::Lambda::Function'
        Properties:
            FunctionName: 'sputnik-admin-service'
            Description: 'sputnik Admin microservice'
            Code:
                S3Bucket: !Ref sourceBucket
                S3Key: !Join ['/', [!Ref lambdaSourceKeyPrefix, 'sputnik-admin-service.zip']]
            Handler: index.handler
            Runtime: nodejs8.10
            Role: !GetAtt lambdaServiceAdminRole.Arn
            Timeout: 60
            MemorySize: 256
            Environment:
                Variables:
                    USER_POOL_ID: !Ref userPoolId
                    LOGGING_LEVEL: 2


Outputs:
    lambdaServiceAdminArn:
        Description: 'Admin Service ARN'
        Value: !GetAtt lambdaServiceAdmin.Arn
