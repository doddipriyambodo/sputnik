AWSTemplateFormatVersion: "2010-09-09"
Description: "sputnik - Micro Service Lambda - Settings - Version %%VERSION%%"
Parameters:
    sourceBucket:
        Type: String
        Description: S3 Bucket for Lambda code.
    lambdaSourceKeyPrefix:
        Type: String
        Description: S3 Bucket Key prefix for Lambda code.
    iotJustInTimeOnBoardingTopicRuleName:
        Type: String
        Description: IoT Just In Time On Boarding Topic Rule name
    settingsTable:
        Type: String
        Description: DynamoDB Table for storing the application settings

Resources:

    lambdaServiceSettingsRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Principal:
                            Service:
                                - "lambda.amazonaws.com"
                        Action:
                                - "sts:AssumeRole"
            Path: "/"

    lambdaServiceSettingsPolicy:
        Type: 'AWS::IAM::ManagedPolicy'
        Properties:
            Description: 'sputnik policy for the Settings microservice Lambda function.'
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Action:
                            - "logs:CreateLogGroup"
                            - "logs:CreateLogStream"
                            - "logs:PutLogEvents"
                        Resource: !Join ["", ["arn:aws:logs:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":log-group:/aws/lambda/", !Ref lambdaServiceSettings, ":*"]]
                    -
                        Effect: "Allow"
                        Action:
                            - "dynamodb:DescribeTable"
                            - 'dynamodb:BatchGetItem'
                            - 'dynamodb:BatchWriteItem'
                            - 'dynamodb:GetItem'
                            - 'dynamodb:PutItem'
                            - 'dynamodb:Query'
                            - 'dynamodb:Scan'
                        Resource:
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref settingsTable]]
                    -
                        Effect: "Allow"
                        Action:
                            # TODO: Be way more restrictive here
                            - "iot:*"
                        Resource:
                            - "*"
            Roles:
                - !Ref 'lambdaServiceSettingsRole'

    lambdaServiceSettings:
        Type: "AWS::Lambda::Function"
        Properties:
            FunctionName: "sputnik-settings-service"
            Description: "sputnik administration microservice"
            Code:
                S3Bucket: !Ref sourceBucket
                S3Key: !Join ["/", [!Ref lambdaSourceKeyPrefix, "sputnik-settings-service.zip"]]
            Handler: index.handler
            Runtime: nodejs8.10
            Role: !GetAtt lambdaServiceSettingsRole.Arn
            Timeout: 60
            MemorySize: 256
            Environment:
                Variables:
                    IOT_JUST_IN_TIME_ON_BOARDING_TOPIC_RULE: !Ref iotJustInTimeOnBoardingTopicRuleName
                    LOGGING_LEVEL: 2


Outputs:
    lambdaServiceSettingsArn:
        Description: "Settings Service ARN"
        Value: !GetAtt lambdaServiceSettings.Arn
