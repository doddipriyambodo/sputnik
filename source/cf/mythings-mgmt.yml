AWSTemplateFormatVersion: '2010-09-09'
Description: 'My Things Management - Main - Version %%VERSION%%'
Parameters:
    AdministratorName:
        Type: String
        Description: Name of the My Things Management administrator.
    AdministratorEmail:
        Type: String
        Description: Email address for My Things Management administrator.
        AllowedPattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"

Mappings:
    SourceCode:
        App:
            ShortName: 'mythings-mgmt'
            FullName: 'My Things Management'
        General:
            S3Bucket: '%%BUCKET_NAME%%'
            KeyPrefix: 'mythings-mgmt/%%VERSION%%'

Resources:

    # ##########################################################################
    #
    # S3
    #
    # ##########################################################################
    # Nested stack - Data bucket creation
    CFStackForDataBucket:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-s3bucket-data.yml']]

    # Nested stack - Website bucket creation
    CFStackForWebsite:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-s3bucket-website.yml']]

    # ##########################################################################
    #
    # Cognito
    #
    # ##########################################################################
    # Nested stack - Cognito
    CFStackForCognito:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-cognito.yml']]
            Parameters:
                AdministratorName: !Ref AdministratorName
                AdministratorEmail: !Ref AdministratorEmail
                dataBucketArn: !GetAtt CFStackForDataBucket.Outputs.dataBucketArn
                websiteURL: !GetAtt CFStackForWebsite.Outputs.websiteUrl


    # ##########################################################################
    #
    # Dynamo DB
    #
    # ##########################################################################
    CFStackForDynamoDB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/dynamodb/mythings-mgmt-ddb-tables.yml']]


    # ##########################################################################
    #
    # Lambda
    #
    # ##########################################################################
    CFStackForLambda:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/lambda/mythings-mgmt-lambda.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                destBucketArn: !GetAtt CFStackForWebsite.Outputs.websiteBucketArn
                dataBucket: !GetAtt CFStackForDataBucket.Outputs.dataBucket
                dataBucketArn: !GetAtt CFStackForDataBucket.Outputs.dataBucketArn
                settingsTable: !GetAtt CFStackForDynamoDB.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDynamoDB.Outputs.devicesTable
                deviceTypesTable: !GetAtt CFStackForDynamoDB.Outputs.deviceTypesTable
                deviceBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.deviceBlueprintsTable
                deploymentsTable: !GetAtt CFStackForDynamoDB.Outputs.deploymentsTable
                solutionsTable: !GetAtt CFStackForDynamoDB.Outputs.solutionsTable
                solutionBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.solutionBlueprintsTable
                solutionsGreengrassGroupRoleArn: !GetAtt SolutionsGreengrassGroupRole.Arn
                solutionsGreengrassIoTPolicy: !Ref SolutionsGreengrassIoTPolicy

    # ##########################################################################
    #
    # AppSync
    #
    # ##########################################################################
    CFStackForAppSync:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-appsync.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], !Join ['-', ['cf/graphql', '%%DEPLOYMENT_UUID%%']] ]]
                userPoolId: !GetAtt CFStackForCognito.Outputs.userPoolId
                settingsTable: !GetAtt CFStackForDynamoDB.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDynamoDB.Outputs.devicesTable
                deviceTypesTable: !GetAtt CFStackForDynamoDB.Outputs.deviceTypesTable
                deviceBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.deviceBlueprintsTable
                deploymentsTable: !GetAtt CFStackForDynamoDB.Outputs.deploymentsTable
                solutionsTable: !GetAtt CFStackForDynamoDB.Outputs.solutionsTable
                solutionBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.solutionBlueprintsTable
                lambdaServiceDevicesArn: !GetAtt CFStackForLambda.Outputs.lambdaServiceDevicesArn
                lambdaServiceSettingsArn: !GetAtt CFStackForLambda.Outputs.lambdaServiceSettingsArn
                lambdaServiceFactoryResetArn: !GetAtt CFStackForLambda.Outputs.lambdaServiceFactoryResetArn
                lambdaServiceDeploymentsArn: !GetAtt CFStackForLambda.Outputs.lambdaServiceDeploymentsArn
                lambdaServiceSolutionsArn: !GetAtt CFStackForLambda.Outputs.lambdaServiceSolutionsArn
                lambdaServiceUtilsArn: !GetAtt CFStackForLambda.Outputs.customResourceUtilsHelperArn

    # ##########################################################################
    #
    # Solutions
    #
    # ##########################################################################
    CFStackForSolutions:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], !Ref 'AWS::Region']], !FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'cf/solutions/mythings-mgmt-solutions.yml']]
            Parameters:
                sourceS3Bucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], !Ref 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'cf/solutions']]
                greengrassSourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'greengrass']]
                deviceBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.deviceBlueprintsTable
                deviceTypesTable: !GetAtt CFStackForDynamoDB.Outputs.deviceTypesTable
                solutionBlueprintsTable: !GetAtt CFStackForDynamoDB.Outputs.solutionBlueprintsTable
                customResourceUtilsHelperArn: !GetAtt CFStackForLambda.Outputs.customResourceUtilsHelperArn
                deploymentUUID: '%%DEPLOYMENT_UUID%%'
                dataS3Bucket: !GetAtt CFStackForDataBucket.Outputs.dataBucket
                dataS3BucketArn: !GetAtt CFStackForDataBucket.Outputs.dataBucketArn
                solutionsGreengrassGroupRole: !Ref SolutionsGreengrassGroupRole

    # Solutions Greengrass group role
    # NOTE: This is placed here, because else it creates a circular dependency between the Lambda Stack and the Solutions Stack.
    SolutionsGreengrassGroupRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: 'Allow'
                      Principal:
                          Service:
                              - 'greengrass.amazonaws.com'
                      Action:
                          - 'sts:AssumeRole'
            Path: '/'

    # Solutions IoT Policy for Greengrass devices
    # NOTE: This is placed here, because else it creates a circular dependency between the Lambda Stack and the Solutions Stack.
    SolutionsGreengrassIoTPolicy:
        Type: "AWS::IoT::Policy"
        DeletionPolicy: Retain
        Properties:
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Action:
                            - "iot:*"
                            - "greengrass:*"
                        Resource:
                            - "*"


    # ##########################################################################
    #
    # Init
    #
    # ##########################################################################

    iotEndpoint:
        Type: 'Custom::Lambda'
        Properties:
            ServiceToken: !GetAtt CFStackForLambda.Outputs.customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            customAction: 'iotDescribeEndpoint'
            # endpointType: 'iot:Data'
            endpointType: 'iot:Data-ATS'

    # Initialization - Copy of website assets (html/js/css/assets)
    website:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForLambda.Outputs.customResourceS3HelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
            sourceS3Key: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'console']]
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            customAction: 'copyS3assets'

    websiteConfig:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForLambda.Outputs.customResourceS3HelperArn
            Region: !Ref 'AWS::Region'
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            destS3Key: 'assets/appVariables.js'
            file:
                USER_POOL_ID: !GetAtt CFStackForCognito.Outputs.userPoolId
                USER_POOL_CLIENT_ID: !GetAtt CFStackForCognito.Outputs.websiteCognitoClientId
                IDENTITY_POOL_ID: !GetAtt CFStackForCognito.Outputs.identityPool
                # APIG_ENDPOINT: !Join ['', ['https://', !Ref api, '.execute-api.', !Ref 'AWS::Region', '.amazonaws.com/prod']]
                REGION: !Ref 'AWS::Region'
                IOT_COGNITO_POLICY: !GetAtt CFStackForCognito.Outputs.websiteCognitoIoTPolicy
                S3_DATA_BUCKET: !GetAtt CFStackForDataBucket.Outputs.dataBucket
                APP_SYNC_GRAPHQL_ENDPOINT: !GetAtt CFStackForAppSync.Outputs.appSyncGraphQLUrl
                IOT_ENDPOINT: !GetAtt iotEndpoint.endpointAddress
            customAction: 'putFile'

    # Initialization - Init of Thing Groups and Things
    initThingGroups:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForLambda.Outputs.customResourceThingGroupsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
            sourceS3Key: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'console']]
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            customAction: 'init'




Outputs:
    # Website
    websiteUrl:
        Description: 'My Things Management Website URL'
        Value: !GetAtt CFStackForWebsite.Outputs.websiteUrl
    # Cognito
    userPoolArn:
        Description: "My Things Management User Pool"
        Value: !GetAtt CFStackForCognito.Outputs.userPoolArn
    userPoolId:
        Description: "My Things Management User Pool ID"
        Value: !GetAtt CFStackForCognito.Outputs.userPoolId
    websiteCognitoClientId:
        Description: "My Things Management Website Cognito Client"
        Value: !GetAtt CFStackForCognito.Outputs.websiteCognitoClientId
    identityPool:
        Description: "My Things Management Identity Pool"
        Value: !GetAtt CFStackForCognito.Outputs.identityPool
    websiteCognitoIoTPolicy:
        Description: "IoT Policy to access resources"
        Value: !GetAtt CFStackForCognito.Outputs.websiteCognitoIoTPolicy
    iotEndpoint:
        Description: "IoT Endpoint"
        Value: !GetAtt iotEndpoint.endpointAddress
    # # Data Bucket
    # dataBucketAccessPolicy:
    #     Description: "IAM Policy to access the My Things Management Data bucket"
    #     Value: !GetAtt CFStackForDataBucket.Outputs.dataBucketAccessPolicy

