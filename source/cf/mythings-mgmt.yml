AWSTemplateFormatVersion: '2010-09-09'
Description: 'My Things Management - Main - Version %%VERSION%%'
Parameters:
    AdministratorName:
        Type: String
        Description: Name of the My Things Management administrator.
    AdministratorEmail:
        Type: String
        Description: Email address for My Things Management administrator.
        AllowedPattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"

Mappings:
    SourceCode:
        App:
            ShortName: 'mythings-mgmt'
            FullName: 'My Things Management'
        General:
            S3Bucket: '%%BUCKET_NAME%%'
            KeyPrefix: 'mythings-mgmt/%%VERSION%%'

Resources:

    # Nested stack - Data bucket creation
    CFStackForDataBucket:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-s3bucket-data.yml']]

    # Nested stack - Website bucket creation
    CFStackForWebsite:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-s3bucket-website.yml']]

    # Nested stack - Custom resource - S3 Helper
    CFStackForCustomResourceS3Helper:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-helper-s3.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                destBucketArn: !GetAtt CFStackForWebsite.Outputs.websiteBucketArn
                dataBucketArn: !GetAtt CFStackForDataBucket.Outputs.dataBucketArn

    # Nested stack - Custom resource - Thing Groups Helper
    CFStackForCustomResourceThingGroupsHelper:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-helper-thing-groups.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]

    # Nested stack - Cognito
    CFStackForCognito:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-cognito.yml']]
            Parameters:
                AdministratorName: !Ref AdministratorName
                AdministratorEmail: !Ref AdministratorEmail
                dataBucketArn: !GetAtt CFStackForDataBucket.Outputs.dataBucketArn
                websiteURL: !GetAtt CFStackForWebsite.Outputs.websiteUrl

    # Nested stack - DynamoDB Table - Settings
    CFStackForDDBSettings:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-settings.yml']]

    # Nested stack - DynamoDB Table - Device Types
    CFStackForDDBDeviceTypes:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-device-types.yml']]

    # Nested stack - DynamoDB Table - Device Blueprints
    CFStackForDDBDeviceBlueprints:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-device-blueprints.yml']]

    # Nested stack - DynamoDB Table - Devices
    CFStackForDDBDevices:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-devices.yml']]

    # Nested stack - DynamoDB Table - Deployments
    CFStackForDDBDeployments:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-deployments.yml']]

    # Nested stack - DynamoDB Table - Solutions
    CFStackForDDBSolutions:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-solutions.yml']]

    # Nested stack - DynamoDB Table - Solution Blueprints
    # CFStackForDDBSolutionBlueprints:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-ddb-table-solution-blueprints.yml']]


    # Nested stack - MicroService - Factory Reset
    CFStackForFactoryResetService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-factoryreset.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
                deviceTypesTable: !GetAtt CFStackForDDBDeviceTypes.Outputs.deviceTypesTable
                deviceBlueprintsTable: !GetAtt CFStackForDDBDeviceBlueprints.Outputs.deviceBlueprintsTable

    # Nested stack - MicroService - Settings
    CFStackForSettingsService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-settings.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                iotThingAutoRegistrationTopicRuleName: !GetAtt CFStackForThingAutoRegistrationService.Outputs.iotThingAutoRegistrationTopicRuleName
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable

    # Nested stack - MicroService - Thing Auto Registration
    CFStackForThingAutoRegistrationService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-thing-auto-registration.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                devicesTable: !GetAtt CFStackForDDBDevices.Outputs.devicesTable
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable

    # Nested stack - MicroService - Devices
    CFStackForDevicesService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-devices.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDDBDevices.Outputs.devicesTable

    # Nested stack - MicroService - Deployments
    CFStackForDeploymentsService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-deployments.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDDBDevices.Outputs.devicesTable
                deviceTypesTable: !GetAtt CFStackForDDBDeviceTypes.Outputs.deviceTypesTable
                deviceBlueprintsTable: !GetAtt CFStackForDDBDeviceBlueprints.Outputs.deviceBlueprintsTable
                deploymentsTable: !GetAtt CFStackForDDBDeployments.Outputs.deploymentsTable

    # Nested stack - MicroService - Solutions
    CFStackForSolutionsService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-solutions.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDDBDevices.Outputs.devicesTable
                solutionsTable: !GetAtt CFStackForDDBSolutions.Outputs.solutionsTable

    # Nested stack - AppSync
    CFStackForAppSync:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-appsync.yml']]
            Parameters:
                sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
                sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], !Join ['-', ['cf/graphql', '%%DEPLOYMENT_UUID%%']] ]]
                userPoolId: !GetAtt CFStackForCognito.Outputs.userPoolId
                settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
                devicesTable: !GetAtt CFStackForDDBDevices.Outputs.devicesTable
                deviceTypesTable: !GetAtt CFStackForDDBDeviceTypes.Outputs.deviceTypesTable
                deviceBlueprintsTable: !GetAtt CFStackForDDBDeviceBlueprints.Outputs.deviceBlueprintsTable
                deploymentsTable: !GetAtt CFStackForDDBDeployments.Outputs.deploymentsTable
                solutionsTable: !GetAtt CFStackForDDBSolutions.Outputs.solutionsTable
                lambdaServiceDevicesArn: !GetAtt CFStackForDevicesService.Outputs.lambdaServiceDevicesArn
                lambdaServiceSettingsArn: !GetAtt CFStackForSettingsService.Outputs.lambdaServiceSettingsArn
                lambdaServiceFactoryResetArn: !GetAtt CFStackForFactoryResetService.Outputs.lambdaServiceFactoryResetArn
                lambdaServiceDeploymentsArn: !GetAtt CFStackForDeploymentsService.Outputs.lambdaServiceDeploymentsArn
                lambdaServiceSolutionsArn: !GetAtt CFStackForSolutionsService.Outputs.lambdaServiceSolutionsArn


    # Initialization - Copy of website assets (html/js/css/assets)
    website:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForCustomResourceS3Helper.Outputs.customResourceS3HelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
            sourceS3Key: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'console']]
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            customAction: 'copyS3assets'

    websiteConfig:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForCustomResourceS3Helper.Outputs.customResourceS3HelperArn
            Region: !Ref 'AWS::Region'
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            destS3Key: 'assets/appVariables.js'
            file:
                USER_POOL_ID: !GetAtt CFStackForCognito.Outputs.userPoolId
                USER_POOL_CLIENT_ID: !GetAtt CFStackForCognito.Outputs.websiteCognitoClientId
                IDENTITY_POOL_ID: !GetAtt CFStackForCognito.Outputs.identityPool
                # APIG_ENDPOINT: !Join ['', ['https://', !Ref api, '.execute-api.', !Ref 'AWS::Region', '.amazonaws.com/prod']]
                REGION: !Ref 'AWS::Region'
                IOT_COGNITO_POLICY: !GetAtt CFStackForCognito.Outputs.websiteCognitoIoTPolicy
                S3_DATA_BUCKET: !GetAtt CFStackForDataBucket.Outputs.dataBucket
                APP_SYNC_GRAPHQL_ENDPOINT: !GetAtt CFStackForAppSync.Outputs.appSyncGraphQLUrl
            customAction: 'putFile'

    # Initialization - Init of Thing Groups and Things
    initThingGroups:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !GetAtt CFStackForCustomResourceThingGroupsHelper.Outputs.customResourceThingGroupsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
            sourceS3Key: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'console']]
            destS3Bucket: !GetAtt CFStackForWebsite.Outputs.websiteBucket
            customAction: 'init'

Outputs:
    # Website
    websiteUrl:
        Description: 'My Things Management Website URL'
        Value: !GetAtt CFStackForWebsite.Outputs.websiteUrl
    # Cognito
    userPoolArn:
        Description: "My Things Management User Pool"
        Value: !GetAtt CFStackForCognito.Outputs.userPoolArn
    userPoolId:
        Description: "My Things Management User Pool ID"
        Value: !GetAtt CFStackForCognito.Outputs.userPoolId
    websiteCognitoClientId:
        Description: "My Things Management Website Cognito Client"
        Value: !GetAtt CFStackForCognito.Outputs.websiteCognitoClientId
    identityPool:
        Description: "My Things Management Identity Pool"
        Value: !GetAtt CFStackForCognito.Outputs.identityPool
    websiteCognitoIoTPolicy:
        Description: "IoT Policy to access resources"
        Value: !GetAtt CFStackForCognito.Outputs.websiteCognitoIoTPolicy

    # # Data Bucket
    # dataBucketAccessPolicy:
    #     Description: "IAM Policy to access the My Things Management Data bucket"
    #     Value: !GetAtt CFStackForDataBucket.Outputs.dataBucketAccessPolicy


    # Nested stack - MicroService - Admin
    # CFStackForAdminService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: !Join ['/', ['https://s3.amazonaws.com', !Join ['-', ['%%BUCKET_NAME%%', Ref: 'AWS::Region']], 'mythings-mgmt/%%VERSION%%/cf/mythings-mgmt-lambda-service-admin.yml']]
    #         Parameters:
    #             sourceBucket: !Join ['-', [!FindInMap ['SourceCode', 'General', 'S3Bucket'], Ref: 'AWS::Region']]
    #             sourceKeyPrefix: !Join ['/', [!FindInMap ['SourceCode', 'General', 'KeyPrefix'], 'lambda']]
    #             settingsTable: !GetAtt CFStackForDDBSettings.Outputs.settingsTable
    #             userPoolId: !GetAtt CFStackForCognito.Outputs.userPoolId
