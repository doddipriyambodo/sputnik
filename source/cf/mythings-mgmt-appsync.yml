AWSTemplateFormatVersion: '2010-09-09'
Description: 'My Things Management - AppSync - Version %%VERSION%%'
Parameters:
    sourceBucket:
        Type: String
        Description: My Things Management S3 bucket.
    sourceKeyPrefix:
        Type: String
        Description: My Things management Source key prefix.
    userPoolId:
        Type: String
        Description: My Things Management User Pool Id.
    settingsTable:
        Type: String
        Description: DynamoDB Table for storing the application settings
    deviceTypesTable:
        Type: String
        Description: DynamoDB Table for storing the device types
    deviceBlueprintsTable:
        Type: String
        Description: DynamoDB Table for storing the device blueprints
    devicesTable:
        Type: String
        Description: DynamoDB Table for storing the devices
    deploymentsTable:
        Type: String
        Description: DynamoDB Table for storing the deployments
    solutionsTable:
        Type: String
        Description: DynamoDB Table for storing the solutions
    lambdaServiceFactoryResetArn:
        Type: String
        Description: Factory Reset Micro Service ARN
    lambdaServiceSettingsArn:
        Type: String
        Description: Settings Micro Service ARN
    lambdaServiceDevicesArn:
        Type: String
        Description: Devices Micro Service ARN
    lambdaServiceDeploymentsArn:
        Type: String
        Description: Deployments Micro Service ARN

Resources:

    # ROLE
    appSyncRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: 'Allow'
                      Principal:
                          Service:
                              - 'appsync.amazonaws.com'
                      Action:
                          - 'sts:AssumeRole'
            Path: '/'
    # POLICY
    appSyncDDBPolicy:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            Description: "Policy for the My Things Management AppSync API to access DynamoDB."
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: 'Allow'
                        Action:
                            - 'dynamodb:BatchGetItem'
                            - 'dynamodb:BatchWriteItem'
                            - 'dynamodb:DeleteItem'
                            - 'dynamodb:GetItem'
                            - 'dynamodb:PutItem'
                            - 'dynamodb:Query'
                            - 'dynamodb:Scan'
                            - 'dynamodb:UpdateItem'
                        Resource:
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref settingsTable ]]
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref deviceTypesTable ]]
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref deviceBlueprintsTable ]]
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref devicesTable ]]
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref deploymentsTable ]]
                            - !Join ['', ['arn:aws:dynamodb:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':table/', !Ref solutionsTable ]]
            Roles:
                - !Ref appSyncRole
    appSyncLambdaPolicy:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            Description: "Policy for the My Things Management AppSync API to access Lambda."
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: 'Allow'
                        Action:
                            - 'lambda:InvokeFunction'
                        Resource:
                            - !Ref lambdaServiceFactoryResetArn
                            - !Ref lambdaServiceSettingsArn
                            - !Ref lambdaServiceDevicesArn
                            - !Ref lambdaServiceDeploymentsArn

            Roles:
                - !Ref appSyncRole


    # API
    appSyncGraphQLApi:
        Type: 'AWS::AppSync::GraphQLApi'
        Properties:
            Name: My Things Management AppSync API
            AuthenticationType: AMAZON_COGNITO_USER_POOLS
            UserPoolConfig:
                UserPoolId: !Ref userPoolId
                AwsRegion: !Ref 'AWS::Region'
                DefaultAction: DENY

    # DATA SOURCES - DynamoDB
    appSyncDataSourceSettingsDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceSettingsDynamoDB
            Description: The Settings DynamoDB table App Sync Data source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref settingsTable
    appSyncDataSourceDeviceTypesDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDeviceTypesDynamoDB
            Description: The Device Types DynamoDB table App Sync Data Source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref deviceTypesTable
    appSyncDataSourceDeviceBlueprintsDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDeviceBlueprintsDynamoDB
            Description: The Device Blueprints DynamoDB table App Sync Data Source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref deviceBlueprintsTable
    appSyncDataSourceDevicesDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDevicesDynamoDB
            Description: The Devices DynamoDB table App Sync Data Source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref devicesTable
    appSyncDataSourceDeploymentsDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDeploymentsDynamoDB
            Description: The Deployments DynamoDB table App Sync Data Source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref deploymentsTable
    appSyncDataSourceSolutionsDynamoDB:
        Type: 'AWS::AppSync::DataSource'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceSolutionsDynamoDB
            Description: The Solutions DynamoDB table App Sync Data Source
            Type: AMAZON_DYNAMODB
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            DynamoDBConfig:
                AwsRegion: !Ref 'AWS::Region'
                TableName: !Ref solutionsTable

    # DATA SOURCES - Lambda
    appSyncDataSourceFactoryResetLambda:
        Type: AWS::AppSync::DataSource
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceFactoryResetLambda
            Description: The Factory Reset Lambda App Sync Data Source
            Type: AWS_LAMBDA
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            LambdaConfig:
                LambdaFunctionArn: !Ref lambdaServiceFactoryResetArn
    appSyncDataSourceSettingsLambda:
        Type: AWS::AppSync::DataSource
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceSettingsLambda
            Description: The Settings Lambda App Sync Data Source
            Type: AWS_LAMBDA
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            LambdaConfig:
                LambdaFunctionArn: !Ref lambdaServiceSettingsArn
    appSyncDataSourceDevicesLambda:
        Type: AWS::AppSync::DataSource
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDevicesLambda
            Description: The Devices Lambda App Sync Data Source
            Type: AWS_LAMBDA
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            LambdaConfig:
                LambdaFunctionArn: !Ref lambdaServiceDevicesArn
    appSyncDataSourceDeploymentsLambda:
        Type: AWS::AppSync::DataSource
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            Name: appSyncDataSourceDeploymentsLambda
            Description: The Deployments Lambda App Sync Data Source
            Type: AWS_LAMBDA
            ServiceRoleArn: !Join ['', ['arn:aws:iam::', !Ref 'AWS::AccountId', ':role/', !Ref appSyncRole]]
            LambdaConfig:
                LambdaFunctionArn: !Ref lambdaServiceDeploymentsArn

    # RESOLVERS - QUERIES - DeviceTypes
    appSyncResolverQueryListDeviceTypes:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDeviceTypes
            DataSourceName: !GetAtt appSyncDataSourceDeviceTypesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-response-mapping-template-list.gql']]
    appSyncResolverQueryGetDeviceType:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getDeviceType
            DataSourceName: !GetAtt appSyncDataSourceDeviceTypesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-request-mapping-template-get.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - QUERIES - Settings
    appSyncResolverQueryGetSetting:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getSetting
            DataSourceName: !GetAtt appSyncDataSourceSettingsDynamoDB.Name
            RequestMappingTemplate: |
                {
                    "version" : "2017-02-28",
                    "operation" : "GetItem",
                    "key" : {
                        "id" : $util.dynamodb.toDynamoDBJson($ctx.args.id)
                    }
                }
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - QUERIES - Thing Group Auto Registration
    appSyncResolverQueryGetThingAutoRegistrationState:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getThingAutoRegistrationState
            DataSourceName: !GetAtt appSyncDataSourceSettingsLambda.Name
            RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "cmd": "getThingAutoRegistrationState", "arguments": $util.toJson($context.arguments) } }'
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # RESOLVERS - QUERIES - Device Blueprints
    appSyncResolverQueryListDeviceBlueprints:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDeviceBlueprints
            DataSourceName: !GetAtt appSyncDataSourceDeviceBlueprintsDynamoDB.Name
            RequestMappingTemplate: |
                {
                    "version" : "2017-02-28",
                    "operation" : "Scan",
                    #if( $ctx.args.limit )
                        "limit": $ctx.args.limit,
                    #end
                    #if( ${ctx.args.nextToken} )
                        "nextToken": "${ctx.args.nextToken}"
                    #end
                }
            ResponseMappingTemplate: |
                {
                    "deviceBlueprints": $util.toJson($ctx.result.items),
                    #if( ${ctx.result.nextToken} )
                        "nextToken": "${ctx.result.nextToken}",
                    #end
                }
    appSyncResolverQueryGetDeviceBlueprint:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getDeviceBlueprint
            DataSourceName: !GetAtt appSyncDataSourceDeviceBlueprintsDynamoDB.Name
            RequestMappingTemplate: |
                {
                    "version" : "2017-02-28",
                    "operation" : "GetItem",
                    "key" : {
                        "id" : $util.dynamodb.toDynamoDBJson($ctx.args.id)
                    }
                }
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - QUERIES - Devices
    appSyncResolverQueryListDevices:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDevices
            DataSourceName: !GetAtt appSyncDataSourceDevicesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-list.gql']]
    appSyncResolverQueryListDevicesOfDeviceType:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDevicesOfDeviceType
            DataSourceName: !GetAtt appSyncDataSourceDevicesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-of-device-type-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-of-device-type-response-mapping-template-list.gql']]
    appSyncResolverQueryListDevicesWithDeviceBlueprint:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDevicesWithDeviceBlueprint
            DataSourceName: !GetAtt appSyncDataSourceDevicesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-with-device-blueprint-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-with-device-blueprint-response-mapping-template-list.gql']]
    appSyncResolverQueryGetDevice:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getDevice
            DataSourceName: !GetAtt appSyncDataSourceDevicesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-get.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverQueryGetDeviceStats:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: getDeviceStats
            DataSourceName: !GetAtt appSyncDataSourceDevicesLambda.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'device-stats-request-mapping-template-get.gql']]
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # RESOLVERS - QUERIES - Deployments
    appSyncResolverQueryListDeployments:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: listDeployments
            DataSourceName: !GetAtt appSyncDataSourceDeploymentsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'deployments', 'deployments-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'deployments', 'deployments-response-mapping-template-list.gql']]

    # RESOLVERS - QUERIES - Solutions
    appSyncResolverQueryListSolutions:
        Type: 'AWS::AppSync::Resolver'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: 'listSolutions'
            DataSourceName: !GetAtt appSyncDataSourceSolutionsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'solutions', 'solutions-request-mapping-template-list.gql']]
            ResponseMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'solutions', 'solutions-response-mapping-template-list.gql']]
    appSyncResolverQueryGetSolution:
        Type: 'AWS::AppSync::Resolver'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Query
            FieldName: 'getSolution'
            DataSourceName: !GetAtt appSyncDataSourceSolutionsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'solutions', 'solutions-request-mapping-template-get.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - MUTATIONS - Devices
    appSyncResolverMutationAddDevice:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: addDevice
            DataSourceName: !GetAtt appSyncDataSourceDevicesLambda.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-add.gql']]
            ResponseMappingTemplate: '$util.toJson($context.result)'
    appSyncResolverMutationDeleteDevice:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: deleteDevice
            DataSourceName: !GetAtt appSyncDataSourceDevicesLambda.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-delete.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverMutationUpdateDevice:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: updateDevice
            DataSourceName: !GetAtt appSyncDataSourceDevicesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'devices', 'devices-request-mapping-template-update.gql']]
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # RESOLVERS - MUTATIONS - DeviceTypes
    appSyncResolverMutationAddDeviceType:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: addDeviceType
            DataSourceName: !GetAtt appSyncDataSourceDeviceTypesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-request-mapping-template-add.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverMutationDeleteDeviceType:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: deleteDeviceType
            DataSourceName: !GetAtt appSyncDataSourceDeviceTypesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-request-mapping-template-delete.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverMutationUpdateDeviceType:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: updateDeviceType
            DataSourceName: !GetAtt appSyncDataSourceDeviceTypesDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-types', 'device-types-request-mapping-template-update.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - MUTATIONS - Device Blueprints
    appSyncResolverMutationAddDeviceBlueprint:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: addDeviceBlueprint
            DataSourceName: !GetAtt appSyncDataSourceDeviceBlueprintsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-blueprints', 'device-blueprints-request-mapping-template-add.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverMutationDeleteDeviceBlueprint:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: deleteDeviceBlueprint
            DataSourceName: !GetAtt appSyncDataSourceDeviceBlueprintsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-blueprints', 'device-blueprints-request-mapping-template-delete.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'
    appSyncResolverMutationUpdateDeviceBlueprint:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: updateDeviceBlueprint
            DataSourceName: !GetAtt appSyncDataSourceDeviceBlueprintsDynamoDB.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'device-blueprints', 'device-blueprints-request-mapping-template-update.gql']]
            ResponseMappingTemplate: '$util.toJson($ctx.result)'

    # RESOLVERS - MUTATIONS - FactoryReset
    appSyncResolverMutationFactoryResetDeviceTypes:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: factoryReset
            DataSourceName: !GetAtt appSyncDataSourceFactoryResetLambda.Name
            RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": $util.toJson($context.arguments) }'
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # RESOLVERS - MUTATIONS - ThingAutoRegistration
    appSyncResolverMutationSetThingAutoRegistrationState:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: setThingAutoRegistrationState
            DataSourceName: !GetAtt appSyncDataSourceSettingsLambda.Name
            RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "cmd": "setThingAutoRegistrationState", "enabled": $context.arguments.enabled } }'
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # RESOLVERS - MUTATIONS - Deployments
    appSyncResolverMutationAddDeployment:
        Type: 'AWS::AppSync::Resolver'
        DependsOn: appSyncSchema
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            TypeName: Mutation
            FieldName: addDeployment
            DataSourceName: !GetAtt appSyncDataSourceDeploymentsLambda.Name
            RequestMappingTemplateS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'deployments', 'deployments-request-mapping-template-add.gql']]
            ResponseMappingTemplate: '$util.toJson($context.result)'

    # SCHEMA
    appSyncSchema:
        Type: 'AWS::AppSync::GraphQLSchema'
        Properties:
            ApiId: !GetAtt appSyncGraphQLApi.ApiId
            DefinitionS3Location: !Join ['/', ['s3:/', !Ref sourceBucket, !Ref sourceKeyPrefix, 'api-schema.gql']]


Outputs:
    appSyncGraphQLApi:
        Description: 'My Things Management AppSync API'
        Value: !Ref appSyncGraphQLApi
    appSyncGraphQLUrl:
        Description: 'My Things Management AppSync Endpoint URL'
        Value: !GetAtt appSyncGraphQLApi.GraphQLUrl
