AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Mini Connected Factory Demo v1.0'
Parameters:
    sourceS3Bucket:
        Type: String
        Description: My Things Management S3 bucket.
    sourceKeyPrefix:
        Type: String
        Description: My Things management Source key prefix.
    greengrassSourceKeyPrefix:
        Type: String
        Description: My Things management source key prefix for the greengrass lambda function code
    deviceBlueprintsTable:
        Type: String
        Description: DynamoDB Table for storing the device blueprints
    deviceTypesTable:
        Type: String
        Description: DynamoDB Table for storing the device types
    solutionBlueprintsTable:
        Type: String
        Description: DynamoDB Table for storing the solution blueprints
    customResourceUtilsHelperArn:
        Type: String
        Description: Utils custom resource helper ARN
    deploymentUUID:
        Type: String
        Description: Used to force update / create of inits
    dataS3Bucket:
        Type: String
        Description: My Things Management Data S3 Bucket
    dataS3BucketArn:
        Type: String
        Description: My Things Management Data S3 Bucket ARN
    solutionsGreengrassGroupRole:
        Type: String
        Description: Greengrass Group Role

Resources:
    AMCF1DeviceBlueprints:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceKeyPrefix, 'device-blueprints']]
            uuid: !Ref deploymentUUID
            table: !Ref deviceBlueprintsTable
            customAction: 'dynamodbPutObjectsFromS3Folder'

    AMCF1DeviceTypes:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceKeyPrefix, 'device-types']]
            uuid: !Ref deploymentUUID
            table: !Ref deviceTypesTable
            customAction: 'dynamodbPutObjectsFromS3Folder'

    AMCF1SolutionBlueprints:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceKeyPrefix, 'solution-blueprints']]
            uuid: !Ref deploymentUUID
            table: !Ref solutionBlueprintsTable
            customAction: 'dynamodbPutObjectsFromS3Folder'

    AMCF1LambdaRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: 'Allow'
                      Principal:
                          Service:
                              - 'lambda.amazonaws.com'
                      Action:
                          - 'sts:AssumeRole'
            Path: '/'

    AMCF1CameraLambda:
        Type: 'AWS::Lambda::Function'
        Properties:
            FunctionName: 'aws-mini-connected-factory-camera-python'
            Description: 'My Things Management AWS Mini Connected Factory Camera Lambda Code'
            Code:
                S3Bucket: !Ref sourceS3Bucket
                S3Key: !Join ['/', [!Ref greengrassSourceKeyPrefix, 'aws-mini-connected-factory-camera-python.zip']]
            Handler: lambda_function.lambda_handler
            Runtime: python2.7
            Role: !GetAtt AMCF1LambdaRole.Arn
            Timeout: 3
            MemorySize: 128
    AMCF1CameraLambdaVersion:
        Type: 'AWS::Lambda::Version'
        Properties:
            FunctionName:
                Ref: 'AMCF1CameraLambda'
            Description: 'A first version of aws-mini-connected-factory-camera-python'
    AMCF1CameraLambdaAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: !Ref AMCF1CameraLambda
            FunctionVersion: !GetAtt AMCF1CameraLambdaVersion.Version
            Name: 'MTM'

    AMCF1BeltLambda:
        Type: 'AWS::Lambda::Function'
        Properties:
            FunctionName: 'aws-mini-connected-factory-belt-serial-python'
            Description: 'My Things Management AWS Mini Connected Factory Belt Lambda Code'
            Code:
                S3Bucket: !Ref sourceS3Bucket
                S3Key: !Join ['/', [!Ref greengrassSourceKeyPrefix, 'aws-mini-connected-factory-belt-serial-python.zip']]
            Handler: lambda_function.lambda_handler
            Runtime: python2.7
            Role: !GetAtt AMCF1LambdaRole.Arn
            Timeout: 3
            MemorySize: 128
    AMCF1BeltLambdaVersion:
        Type: 'AWS::Lambda::Version'
        Properties:
            FunctionName:
                Ref: 'AMCF1BeltLambda'
            Description: 'A first version of aws-mini-connected-factory-belt-serial-python'
    AMCF1BeltLambdaAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: !Ref AMCF1BeltLambda
            FunctionVersion: !GetAtt AMCF1BeltLambdaVersion.Version
            Name: 'MTM'


    AMCF1GreengrassGroupPolicy:
        Type: 'AWS::IAM::ManagedPolicy'
        Properties:
            Description: 'Policy for the My Things Management Greengrass Role.'
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Action:
                            - 'logs:CreateLogStream'
                            - 'logs:DescribeLogStreams'
                            - 'logs:PutLogEvents'
                            - 'logs:CreateLogGroup'
                        Resource: "arn:aws:logs:*:*:log-group:/aws/greengrass/*"
                    -
                        Effect: 'Allow'
                        Action:
                            - 's3:ListBucket'
                            - 's3:GetObject'
                            - 's3:ListObjects'
                        Resource:
                            - !Join ['/', [!Join ['', [!Ref dataS3BucketArn, '*']], '*']]
                            - !Join ['', [!Ref dataS3BucketArn, '*']]
            Roles:
                -
                    !Ref solutionsGreengrassGroupRole


    AMCF1LegoModel:
        Type: 'Custom::LoadLambda'
        Properties:
            ServiceToken: !Ref customResourceUtilsHelperArn
            Region: !Ref 'AWS::Region'
            sourceS3Bucket: !Ref sourceS3Bucket
            sourceS3Key: !Join ['/', [!Ref sourceKeyPrefix, 'models', 'legomodel.tar.gz']]
            destS3Bucket: !Ref dataS3Bucket
            destS3Key: !Join ['/', ['aws-mini-connected-factory-v1.0', 'models', 'legomodel.tar.gz']]
            uuid: !Ref deploymentUUID
            customAction: 'copyFileFromS3ToS3'
