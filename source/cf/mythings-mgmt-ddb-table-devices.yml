AWSTemplateFormatVersion: '2010-09-09'
Description: 'My Things Management - DynamoDB Table - DeviceTypes - Version %%VERSION%%'

Resources:

    mtmDevicesTable:
        Type: 'AWS::DynamoDB::Table'
        DeletionPolicy: 'Delete'
        Properties:
            AttributeDefinitions:
                -
                    AttributeName: 'thingId'
                    AttributeType: 'S'
                -
                    AttributeName: 'deviceTypeId'
                    AttributeType: 'S'
                -
                    AttributeName: 'blueprintId'
                    AttributeType: 'S'
            KeySchema:
                -
                    AttributeName: 'thingId'
                    KeyType: 'HASH'
            GlobalSecondaryIndexes:
                -
                    IndexName: 'deviceTypeId'
                    KeySchema:
                        -
                            AttributeName: 'deviceTypeId'
                            KeyType: 'HASH'
                    Projection:
                        ProjectionType: 'ALL'
                    ProvisionedThroughput:
                        ReadCapacityUnits: 10
                        WriteCapacityUnits: 10
                -
                    IndexName: 'blueprintId'
                    KeySchema:
                        -
                            AttributeName: 'blueprintId'
                            KeyType: 'HASH'
                    Projection:
                        ProjectionType: 'ALL'
                    ProvisionedThroughput:
                        ReadCapacityUnits: 10
                        WriteCapacityUnits: 10
            ProvisionedThroughput:
                ReadCapacityUnits: 10
                WriteCapacityUnits: 10
            SSESpecification:
                SSEEnabled: true
            TableName: 'mythings-mgmt-devices'

    mtmDevicesDynamoDBScalingRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -
                        Effect: 'Allow'
                        Principal:
                            Service:
                                - application-autoscaling.amazonaws.com
                        Action:
                            - 'sts:AssumeRole'
            Path: '/'
            Policies:
                -
                    PolicyName: 'root'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -
                                Effect: 'Allow'
                                Action:
                                    - 'cloudwatch:PutMetricAlarm'
                                    - 'cloudwatch:DescribeAlarms'
                                    - 'cloudwatch:GetMetricStatistics'
                                    - 'cloudwatch:SetAlarmState'
                                    - 'cloudwatch:DeleteAlarms'
                                Resource: '*'
                            -
                                Effect: 'Allow'
                                Action:
                                    - 'dynamodb:DescribeTable'
                                    - 'dynamodb:UpdateTable'
                                    - 'dynamodb:DescribeGlobalTable'
                                    - 'dynamodb:UpdateGlobalTable'
                                Resource:
                                    - !GetAtt mtmDevicesTable.Arn
                                    - !Join ['', ['arn:aws:dynamodb:', Ref: 'AWS::Region', ':', Ref: 'AWS::AccountId', ':table/', Ref: mtmDevicesTable, '/index/deviceTypeId']]
                                    - !Join ['', ['arn:aws:dynamodb:', Ref: 'AWS::Region', ':', Ref: 'AWS::AccountId', ':table/', Ref: mtmDevicesTable, '/index/blueprintId']]

    mtmDevicesWriteCapacityScalableTarget:
        Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
        Properties:
            MaxCapacity: 100
            MinCapacity: 10
            ResourceId: !Join ['/', ['table',  !Ref 'mtmDevicesTable']]
            RoleARN: !GetAtt mtmDevicesDynamoDBScalingRole.Arn
            ScalableDimension: dynamodb:table:WriteCapacityUnits
            ServiceNamespace: dynamodb

    mtmDevicesWriteScalingPolicy:
        Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
        Properties:
            PolicyName: mtmDevicesWriteScalingPolicy
            PolicyType: TargetTrackingScaling
            ScalingTargetId: !Ref mtmDevicesWriteCapacityScalableTarget
            TargetTrackingScalingPolicyConfiguration:
                TargetValue: 70.0
                ScaleInCooldown: 60
                ScaleOutCooldown: 60
                PredefinedMetricSpecification:
                    PredefinedMetricType: DynamoDBWriteCapacityUtilization

    mtmDevicesReadCapacityScalableTarget:
        Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
        Properties:
            MaxCapacity: 100
            MinCapacity: 10
            ResourceId: !Join ['/', ['table',  !Ref 'mtmDevicesTable']]
            RoleARN: !GetAtt mtmDevicesDynamoDBScalingRole.Arn
            ScalableDimension: dynamodb:table:ReadCapacityUnits
            ServiceNamespace: dynamodb

    mtmDevicesReadScalingPolicy:
        Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
        Properties:
            PolicyName: mtmDevicesReadScalingPolicy
            PolicyType: TargetTrackingScaling
            ScalingTargetId: !Ref mtmDevicesReadCapacityScalableTarget
            TargetTrackingScalingPolicyConfiguration:
                TargetValue: 70.0
                ScaleInCooldown: 60
                ScaleOutCooldown: 60
                PredefinedMetricSpecification:
                    PredefinedMetricType: DynamoDBReadCapacityUtilization

    # mtmDevicesGiWriteCapacityScalableTarget:
    #     Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    #     Properties:
    #         MaxCapacity: 100
    #         MinCapacity: 10
    #         ResourceId: !Join ['/', ['table',  !Ref 'mtmDevicesTable', 'index/deviceTypeId']]
    #         RoleARN: !GetAtt mtmDevicesDynamoDBScalingRole.Arn
    #         ScalableDimension: dynamodb:index:WriteCapacityUnits
    #         ServiceNamespace: dynamodb

    # mtmDevicesGiWriteScalingPolicy:
    #     DependsOn: DevicesReadScalingPolicy
    #     Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    #     Properties:
    #         PolicyName: DevicesGiWriteAutoScalingPolicy
    #         PolicyType: TargetTrackingScaling
    #         ScalingTargetId: !Ref mtmDevicesGiWriteCapacityScalableTarget
    #         TargetTrackingScalingPolicyConfiguration:
    #             TargetValue: 70.0
    #             ScaleInCooldown: 60
    #             ScaleOutCooldown: 60
    #             PredefinedMetricSpecification:
    #                 PredefinedMetricType: DynamoDBWriteCapacityUtilization

    # DevicesGiReadCapacityScalableTarget:
    #     Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    #     Properties:
    #         MaxCapacity: 100
    #         MinCapacity: 10
    #         ResourceId: !Join ['/', ['table',  !Ref 'mtmDevicesTable', 'index/deviceTypeId']]
    #         RoleARN: !GetAtt mtmDevicesDynamoDBScalingRole.Arn
    #         ScalableDimension: dynamodb:index:ReadCapacityUnits
    #         ServiceNamespace: dynamodb


    # mtmDeviceTypesGiReadScalingPolicy:
    #     DependsOn: DevicesGiWriteScalingPolicy
    #     Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    #     Properties:
    #         PolicyName: DevicesGiReadAutoScalingPolicy
    #         PolicyType: TargetTrackingScaling
    #         ScalingTargetId: !Ref DevicesGiReadCapacityScalableTarget
    #         TargetTrackingScalingPolicyConfiguration:
    #             TargetValue: 70.0
    #             ScaleInCooldown: 60
    #             ScaleOutCooldown: 60
    #             PredefinedMetricSpecification:
    #                 PredefinedMetricType: DynamoDBReadCapacityUtilization


Outputs:
    mtmDevicesTable:
        Description: 'DynamoDB Devices Table'
        Value: !Ref mtmDevicesTable
