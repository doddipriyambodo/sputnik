{"version":3,"file":"aws-iot.js.map","sources":["ng://aws-iot/lib/aws-iot.service.ts","ng://aws-iot/lib/aws-iot.component.ts","ng://aws-iot/lib/aws-iot.module.ts"],"sourcesContent":["// Angular\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n// AWS\nimport { AmplifyService } from 'aws-amplify-angular';\nimport Amplify from 'aws-amplify';\nimport { AWSIoTProvider } from '@aws-amplify/pubsub/lib/Providers';\n\n// -----\nimport gql from 'graphql-tag';\n\nconst attachPrincipalPolicy = gql`\n    mutation AttachPrincipalPolicy($policyName: String!, $principal: String!) {\n        attachPrincipalPolicy(policyName: $policyName, principal: $principal)\n    }\n`;\nconst getThingShadow = gql`\n    query GetThingShadow($params: AWSJSON!) {\n        getThingShadow(params: $params) {\n            payload\n        }\n    }\n`;\nconst updateThingShadow = gql`\n    mutation UpdateThingShadow($params: AWSJSON!) {\n        updateThingShadow(params: $params) {\n            payload\n        }\n    }\n`;\n\ndeclare var appVariables: any;\n\n\n@Injectable(\n// {\n//     providedIn: 'root'\n// }\n)\nexport class AWSIoTService {\n\n    private connectionSubject: any = new Subject<boolean>();\n    public connectionObservable$ = this.connectionSubject.asObservable();\n    public isConnected = false;\n\n    constructor(private amplifyService: AmplifyService) { }\n\n    connect() {\n        this.amplifyService\n            .auth()\n            .currentCredentials()\n            .then(credentials => {\n\n                const promise: any = this.amplifyService.api().graphql({\n                    query: attachPrincipalPolicy.loc.source.body,\n                    variables: {\n                        policyName: appVariables.IOT_COGNITO_POLICY,\n                        principal: credentials.identityId\n                    }\n                });\n\n                return promise.then(result => {\n                    result = result.data.attachPrincipalPolicy;\n                    if (result === true) {\n                        Amplify.addPluggable(\n                            new AWSIoTProvider({\n                                aws_pubsub_region: appVariables.REGION,\n                                aws_pubsub_endpoint: 'wss://' + appVariables.IOT_ENDPOINT + '/mqtt'\n                            })\n                        );\n                    }\n                    return result;\n                });\n            })\n            .then(result => {\n                console.log('Connected to AWS IoT', result);\n                this.isConnected = true;\n                this.connectionSubject.next(this.isConnected);\n            })\n            .catch(err => {\n                console.error('Error while trying to connect to AWS IoT:', err);\n                this.isConnected = false;\n                this.connectionSubject.next(this.isConnected);\n            });\n    }\n\n    subscribe(topic: string, onMessage, onError) {\n        return this.amplifyService\n            .pubsub()\n            .subscribe(topic)\n            .subscribe(\n                data => onMessage(data),\n                error => onError(error),\n                () => {\n                    console.log('Subscription to', topic, 'done.');\n                }\n            );\n    }\n\n    getThingShadow(params: any) {\n        const promise: any = this.amplifyService.api().graphql({\n            query: getThingShadow.loc.source.body,\n            variables: {\n                params: JSON.stringify(params)\n            }\n        });\n        return promise.then(result => JSON.parse(result.data.getThingShadow.payload));\n    }\n\n    updateThingShadow(params: any) {\n        const promise: any = this.amplifyService.api().graphql({\n            query: updateThingShadow.loc.source.body,\n            variables: {\n                params: JSON.stringify(params)\n            }\n        });\n\n        return promise.then(result => JSON.parse(result.data.updateThingShadow.payload));\n    }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n// Services\nimport { AWSIoTService } from './aws-iot.service';\n\nimport { _ } from 'underscore';\n\nexport class IoTSubscription {\n    topic: string;\n    onMessage: (data: any) => void;\n    onError: (data: any) => void;\n}\n\n@Component({\n    selector: 'aws-iot-component',\n    template: ''\n})\nexport class AWSIoTComponent implements OnDestroy {\n    private subscriptions: Subscription = new Subscription();\n    private iotSubscriptions: IoTSubscription[];\n\n    public desired: any = {};\n    public reported: any = {};\n\n    constructor(private _iotService: AWSIoTService) {}\n\n    ngOnDestroy() {\n        console.log('Unsubscribing to topics');\n        this.subscriptions.unsubscribe();\n    }\n\n    protected subscribe(iotSubscriptions: IoTSubscription[]) {\n        this.iotSubscriptions = iotSubscriptions;\n        this._iotService.connectionObservable$.subscribe((connected: boolean) => {\n            console.log('Change of connection state: setting subscriptions', connected);\n            this.setSubscriptions();\n        });\n        this.setSubscriptions();\n    }\n\n    private setSubscriptions() {\n        if (this._iotService.isConnected) {\n            this.iotSubscriptions.forEach((sub: IoTSubscription) => {\n                console.log('Subscribing to topic:', sub.topic);\n                this.subscriptions.add(this._iotService.subscribe(sub.topic, sub.onMessage, sub.onError));\n            });\n        } else {\n            console.log('Not connected to AWS IoT: Cant subscribe');\n        }\n    }\n    protected updateIncomingShadow(incoming, shadowField = null) {\n        if (incoming.hasOwnProperty('state') && incoming.state.hasOwnProperty('reported')) {\n            if (shadowField !== null && incoming.state.reported.hasOwnProperty(shadowField)) {\n                _.extend(this.reported, incoming.state.reported[shadowField]);\n                // this.reported = incoming.state.reported[shadowField];\n            } else {\n                _.extend(this.reported, incoming.state.reported);\n                // this.reported = incoming.state.reported;\n            }\n        }\n        if (incoming.hasOwnProperty('state') && incoming.state.hasOwnProperty('desired')) {\n            if (shadowField !== null && incoming.state.desired.hasOwnProperty(shadowField)) {\n                _.extend(this.desired, incoming.state.desired[shadowField]);\n                // this.desired = incoming.state.desired[shadowField];\n            } else {\n                _.extend(this.desired, incoming.state.desired);\n                // this.desired = incoming.state.desired;\n            }\n        }\n    }\n\n    protected getLastState(thingName, shadowField = null) {\n        return this._iotService\n            .getThingShadow({\n                thingName: thingName\n            })\n            .then(result => {\n                this.updateIncomingShadow(result, shadowField);\n                return result;\n            })\n            .catch(err => {\n                console.error(err);\n                throw err;\n            });\n    }\n\n    protected updateDesiredShadow(thingName, desiredState) {\n        return this._iotService.updateThingShadow({\n            thingName: thingName,\n            payload: JSON.stringify({\n                state: {\n                    desired: desiredState\n                }\n            })\n        });\n    }\n}\n","// Angular\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// AWS Specific\nimport { AmplifyAngularModule } from 'aws-amplify-angular';\n\n// --------\nimport { AWSIoTComponent } from './aws-iot.component';\nimport { AWSIoTService } from './aws-iot.service';\n\n@NgModule({\n    declarations: [AWSIoTComponent],\n    exports: [AWSIoTComponent],\n    imports: [AmplifyAngularModule, CommonModule],\n    providers: [AWSIoTService]\n})\nexport class AWSIoTModule {}\n"],"names":[],"mappings":";;;;;;;;;;;;;AACA;AAWA,MAAM,qBAAqB,GAAG,GAAG,CAAA;;;;CAIhC,CAAC;;AACF,MAAM,cAAc,GAAG,GAAG,CAAA;;;;;;CAMzB,CAAC;;AACF,MAAM,iBAAiB,GAAG,GAAG,CAAA;;;;;;CAM5B,CAAC;AAUF;;;;IAMI,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;iCAJjB,IAAI,OAAO,EAAW;qCACxB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE;2BAC/C,KAAK;KAE6B;;;;IAEvD,OAAO;QACH,IAAI,CAAC,cAAc;aACd,IAAI,EAAE;aACN,kBAAkB,EAAE;aACpB,IAAI,CAAC,WAAW;;YAEb,MAAM,OAAO,GAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;gBACnD,KAAK,EAAE,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI;gBAC5C,SAAS,EAAE;oBACP,UAAU,EAAE,YAAY,CAAC,kBAAkB;oBAC3C,SAAS,EAAE,WAAW,CAAC,UAAU;iBACpC;aACJ,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM;gBACtB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAC3C,IAAI,MAAM,KAAK,IAAI,EAAE;oBACjB,OAAO,CAAC,YAAY,CAChB,IAAI,cAAc,CAAC;wBACf,iBAAiB,EAAE,YAAY,CAAC,MAAM;wBACtC,mBAAmB,EAAE,QAAQ,GAAG,YAAY,CAAC,YAAY,GAAG,OAAO;qBACtE,CAAC,CACL,CAAC;iBACL;gBACD,OAAO,MAAM,CAAC;aACjB,CAAC,CAAC;SACN,CAAC;aACD,IAAI,CAAC,MAAM;YACR,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACjD,CAAC;aACD,KAAK,CAAC,GAAG;YACN,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,GAAG,CAAC,CAAC;YAChE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACjD,CAAC,CAAC;KACV;;;;;;;IAED,SAAS,CAAC,KAAa,EAAE,SAAS,EAAE,OAAO;QACvC,OAAO,IAAI,CAAC,cAAc;aACrB,MAAM,EAAE;aACR,SAAS,CAAC,KAAK,CAAC;aAChB,SAAS,CACN,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,EACvB,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,EACvB;YACI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAClD,CACJ,CAAC;KACT;;;;;IAED,cAAc,CAAC,MAAW;;QACtB,MAAM,OAAO,GAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;YACnD,KAAK,EAAE,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI;YACrC,SAAS,EAAE;gBACP,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;aACjC;SACJ,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;KACjF;;;;;IAED,iBAAiB,CAAC,MAAW;;QACzB,MAAM,OAAO,GAAQ,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;YACnD,KAAK,EAAE,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI;YACxC,SAAS,EAAE;gBACP,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;aACjC;SACJ,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;KACpF;;;YApFJ,UAAU;;;;YA9BF,cAAc;;;;;;;ACLvB;CAYC;;;;;IAaG,YAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;6BANR,IAAI,YAAY,EAAE;uBAGlC,EAAE;wBACD,EAAE;KAEyB;;;;IAElD,WAAW;QACP,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KACpC;;;;;IAES,SAAS,CAAC,gBAAmC;QACnD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,SAAkB;YAChE,OAAO,CAAC,GAAG,CAAC,mDAAmD,EAAE,SAAS,CAAC,CAAC;YAC5E,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAEO,gBAAgB;QACpB,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC9B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAoB;gBAC/C,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;aAC7F,CAAC,CAAC;SACN;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;SAC3D;;;;;;;IAEK,oBAAoB,CAAC,QAAQ,EAAE,WAAW,GAAG,IAAI;QACvD,IAAI,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;YAC/E,IAAI,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAC7E,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;;aAEjE;iBAAM;gBACH,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;aAEpD;SACJ;QACD,IAAI,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YAC9E,IAAI,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAC5E,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;aAE/D;iBAAM;gBACH,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;aAElD;SACJ;KACJ;;;;;;IAES,YAAY,CAAC,SAAS,EAAE,WAAW,GAAG,IAAI;QAChD,OAAO,IAAI,CAAC,WAAW;aAClB,cAAc,CAAC;YACZ,SAAS,EAAE,SAAS;SACvB,CAAC;aACD,IAAI,CAAC,MAAM;YACR,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAC/C,OAAO,MAAM,CAAC;SACjB,CAAC;aACD,KAAK,CAAC,GAAG;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,MAAM,GAAG,CAAC;SACb,CAAC,CAAC;KACV;;;;;;IAES,mBAAmB,CAAC,SAAS,EAAE,YAAY;QACjD,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACtC,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;gBACpB,KAAK,EAAE;oBACH,OAAO,EAAE,YAAY;iBACxB;aACJ,CAAC;SACL,CAAC,CAAC;KACN;;;YAlFJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE,EAAE;aACf;;;;YAbQ,aAAa;;;;;;;ACHtB;;;YAUC,QAAQ,SAAC;gBACN,YAAY,EAAE,CAAC,eAAe,CAAC;gBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;gBAC1B,OAAO,EAAE,CAAC,oBAAoB,EAAE,YAAY,CAAC;gBAC7C,SAAS,EAAE,CAAC,aAAa,CAAC;aAC7B;;;;;;;;;;;;;;;"}
