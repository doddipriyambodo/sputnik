!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tslib"),require("rxjs"),require("aws-amplify"),require("@aws-amplify/pubsub/lib/Providers"),require("graphql-tag"),require("underscore"),require("@angular/core"),require("@angular/common"),require("aws-amplify-angular")):"function"==typeof define&&define.amd?define("aws-iot",["exports","tslib","rxjs","aws-amplify","@aws-amplify/pubsub/lib/Providers","graphql-tag","underscore","@angular/core","@angular/common","aws-amplify-angular"],t):t(e["aws-iot"]={},e.tslib,e.rxjs,e.Amplify,e.Providers,e.gql,e.underscore,e.ng.core,e.ng.common,e.awsAmplifyAngular)}(this,function(e,t,n,i,o,r,a,s,c,p){"use strict";i=i&&i.hasOwnProperty("default")?i["default"]:i;var u,l,d,h=(r=r&&r.hasOwnProperty("default")?r["default"]:r)(u||(u=t.__makeTemplateObject(["\n    mutation AttachPrincipalPolicy($policyName: String!, $principal: String!) {\n        attachPrincipalPolicy(policyName: $policyName, principal: $principal)\n    }\n"],["\n    mutation AttachPrincipalPolicy($policyName: String!, $principal: String!) {\n        attachPrincipalPolicy(policyName: $policyName, principal: $principal)\n    }\n"]))),y=r(l||(l=t.__makeTemplateObject(["\n    query GetThingShadow($params: AWSJSON!) {\n        getThingShadow(params: $params) {\n            payload\n        }\n    }\n"],["\n    query GetThingShadow($params: AWSJSON!) {\n        getThingShadow(params: $params) {\n            payload\n        }\n    }\n"]))),b=r(d||(d=t.__makeTemplateObject(["\n    mutation UpdateThingShadow($params: AWSJSON!) {\n        updateThingShadow(params: $params) {\n            payload\n        }\n    }\n"],["\n    mutation UpdateThingShadow($params: AWSJSON!) {\n        updateThingShadow(params: $params) {\n            payload\n        }\n    }\n"]))),S=function(){function e(e){this.amplifyService=e,this.connectionSubject=new n.Subject,this.connectionObservable$=this.connectionSubject.asObservable(),this.isConnected=!1}return e.prototype.connect=function(){var t=this;this.amplifyService.auth().currentCredentials().then(function(e){return t.amplifyService.api().graphql({query:h.loc.source.body,variables:{policyName:appVariables.IOT_COGNITO_POLICY,principal:e.identityId}}).then(function(e){return!0===(e=e.data.attachPrincipalPolicy)&&i.addPluggable(new o.AWSIoTProvider({aws_pubsub_region:appVariables.REGION,aws_pubsub_endpoint:"wss://"+appVariables.IOT_ENDPOINT+"/mqtt"})),e})}).then(function(e){console.log("Connected to AWS IoT",e),t.isConnected=!0,t.connectionSubject.next(t.isConnected)})["catch"](function(e){console.error("Error while trying to connect to AWS IoT:",e),t.isConnected=!1,t.connectionSubject.next(t.isConnected)})},e.prototype.subscribe=function(e,t,n){return this.amplifyService.pubsub().subscribe(e).subscribe(function(e){return t(e)},function(e){return n(e)},function(){console.log("Subscription to",e,"done.")})},e.prototype.getThingShadow=function(e){return this.amplifyService.api().graphql({query:y.loc.source.body,variables:{params:JSON.stringify(e)}}).then(function(e){return JSON.parse(e.data.getThingShadow.payload)})},e.prototype.updateThingShadow=function(e){return this.amplifyService.api().graphql({query:b.loc.source.body,variables:{params:JSON.stringify(e)}}).then(function(e){return JSON.parse(e.data.updateThingShadow.payload)})},e.decorators=[{type:s.Injectable}],e.ctorParameters=function(){return[{type:p.AmplifyService}]},e}(),m=function w(){},f=function(){function e(e){this._iotService=e,this.subscriptions=new n.Subscription,this.desired={},this.reported={}}return e.prototype.ngOnDestroy=function(){console.log("Unsubscribing to topics"),this.subscriptions.unsubscribe()},e.prototype.subscribe=function(e){var t=this;this.iotSubscriptions=e,this._iotService.connectionObservable$.subscribe(function(e){console.log("Change of connection state: setting subscriptions",e),t.setSubscriptions()}),this.setSubscriptions()},e.prototype.setSubscriptions=function(){var t=this;this._iotService.isConnected?this.iotSubscriptions.forEach(function(e){console.log("Subscribing to topic:",e.topic),t.subscriptions.add(t._iotService.subscribe(e.topic,e.onMessage,e.onError))}):console.log("Not connected to AWS IoT: Cant subscribe")},e.prototype.updateIncomingShadow=function(e,t){void 0===t&&(t=null),e.hasOwnProperty("state")&&e.state.hasOwnProperty("reported")&&(null!==t&&e.state.reported.hasOwnProperty(t)?a._.extend(this.reported,e.state.reported[t]):a._.extend(this.reported,e.state.reported)),e.hasOwnProperty("state")&&e.state.hasOwnProperty("desired")&&(null!==t&&e.state.desired.hasOwnProperty(t)?a._.extend(this.desired,e.state.desired[t]):a._.extend(this.desired,e.state.desired))},e.prototype.getLastState=function(e,t){var n=this;return void 0===t&&(t=null),this._iotService.getThingShadow({thingName:e}).then(function(e){return n.updateIncomingShadow(e,t),e})["catch"](function(e){throw console.error(e),e})},e.prototype.updateDesiredShadow=function(e,t){return this._iotService.updateThingShadow({thingName:e,payload:JSON.stringify({state:{desired:t}})})},e.decorators=[{type:s.Component,args:[{selector:"aws-iot-component",template:""}]}],e.ctorParameters=function(){return[{type:S}]},e}(),g=function(){function e(){}return e.decorators=[{type:s.NgModule,args:[{declarations:[f],exports:[f],imports:[p.AmplifyAngularModule,c.CommonModule],providers:[S]}]}],e}();e.IoTSubscription=m,e.AWSIoTComponent=f,e.AWSIoTService=S,e.AWSIoTModule=g,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=aws-iot.umd.min.js.map